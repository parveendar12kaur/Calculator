/*doc
---
categories: Forms
title: Customization Options
name: formcustomization
---
There are several options available to you as the developer to customize your form elements.
*/

/*doc
---
categories: Forms
title: Rounded Input
name: 01_roundedinput
parent: formcustomization
---

This is usually combined with the `btn-navigate` class on a submit. You can find example of this button style on the [buttons](/buttons.html) page. See the [/supercharger](http://teslamotors.com/supercharger) page for an example.

```html_example
<div class="form-item">
    <label class="form-label">
        Search
        <input type="search" class="form-text input-rounded">
    </label>
</div>
```
*/

/*doc
---
categories: Forms
title: Large Input Fields
name: 02_largeinputs
parent: formcustomization
---

Sometimes the design calls for a large form input. Example of this woule be on [Tesla Energy's Powerpack Features](//www.teslaenergy.com/powerpack/features) page. Generally speaking, these types of inputs will be used in conjunction with the `.form-inline` helper class.

```html_example
<div class="form-item form-large">
    <label class="form-label">
        First Name
        <input type="text" class="form-text">
    </label>
</div>
```

```html_example
<div class="form-item form-type-select form-large">
    <label for="..." class="form-label">
        <span class="input-prepend">Hours</span>
    </label>
    <span class="form-select-overlay">
        <select id="..." name="..." class="form-select">
            <option value="" selected="selected">- Select -</option>
            <option value="...">Option 1</option>
            <option value="...">Option 2</option>
            <option value="...">Option 3</option>
            <option value="...">Option 4</option>
            <option value="...">Option 5</option>
            <option value="...">Option 6</option>
            <option value="...">Option 7</option>
            <option value="...">Option 8</option>
        </select>
    </span>
</div>
```
*/

/*doc
---
categories: Forms
title: Inline Form Field Helpers
name: 03_inlineformhelpers
parent: formcustomization
---

Inline forms helpers would appear something like what you see below. Generally, they will be used in conjunction with the `.form-large` helper class as seen above.

```html_example
<div class="form-item form-large form-inline">
    <label class="form-label">
        <span class="input-prepend">Hours</span>
        <input type="text" class="form-text">
    </label>
</div>
```

```html_example
<div class="form-item form-type-select form-large form-inline">
    <label for="..." class="form-label">
        <span class="input-prepend">Hours</span>
    </label>
    <span class="form-select-overlay">
        <select id="..." name="..." class="form-select">
            <option value="" selected="selected">- Select -</option>
            <option value="...">Option 1</option>
            <option value="...">Option 2</option>
            <option value="...">Option 3</option>
            <option value="...">Option 4</option>
            <option value="...">Option 5</option>
            <option value="...">Option 6</option>
            <option value="...">Option 7</option>
            <option value="...">Option 8</option>
        </select>
    </span>
</div>
```
*/


/*doc
---
categories: Forms
title: Form Errors
name: 04_formerrors
parent: formcustomization
---

teslamotors.com is currently using [ParsleyJS](http://parsleyjs.org/) for error handling on forms. If you are able to use it, you'll get a bunch of added benefits. If not, you'll have to use your own error handling, but if you use these classes, you'll get the form styling you desire.

```html_example
<div class="form-item">
    <label class="form-label">
        First Name
        <input type="text" class="form-text form-error">
    </label>
    <ul class="errors-list">
      <li class="required">required</li>
    </ul>
</div>
```
*/

/*doc
---
categories: Forms
title: Customization Options
name: 05_alternateforms
parent: formcustomization
---

Sometimes you'll want a form that is on a background color. Simply add `form-alternate` to any wrapper element to your form (example the `form` tag if you have one).

```html_example
<div class="form-alternate">
    <div class="form-item">
        <label class="form-label">
            First Name
            <input type="text" class="form-text">
        </label>
    </div>
</div>
```

*/

/*doc
---
categories: Forms
title: Form error customization options
name: 04_customerror
parent: formcustomization
---

Sometimes there is a need for messages to be displayed to the right or left of other items, but hidden and shown only given certain conditions. You can achieve this by using the `flyout` tag-teamed with the `is-right` or `is-left` classes.

*NOTE:* You are responsible for hiding/showing the error messages.

```html_example
<div class="form-item form-type-password form-item-new-password">
  <label for="field1" class="form-label">Some Field </label>
  <input id="field1" type="password" name="field1" size="60" maxlength="128">
  <ul class="errors-list">
    <li class="required">
      <span class="flyout is-left">This message is on the left of the input element.</span>
    </li>
  </ul>
</div>
```

```html_example
<div class="form-item form-type-password form-item-new-password">
  <label for="field2" class="form-label">Some Field </label>
  <input id="field2" type="password" name="field2" size="60" maxlength="128">
  <ul class="errors-list">
    <li class="required">
      <span class="flyout is-right">This message is on the right of the input element. </span>
    </li>
  </ul>
</div>
```

*/
