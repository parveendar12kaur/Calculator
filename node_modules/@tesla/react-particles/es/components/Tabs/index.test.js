'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _ = require('./');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-console */
console.warn = function (error) {
  throw Error(error);
};
/* eslint-enable no-console */

/* global describe, it, expect, jest */
describe('<Tabs />', function () {
  it('should render without throwing an error', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(
      _2.default,
      null,
      _react2.default.createElement(
        _.TabContent,
        { title: 'foo' },
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      )
    )).dive().dive().matchesElement(_react2.default.createElement(
      'div',
      { className: 'tsla-tabs' },
      _react2.default.createElement('input', {
        type: 'radio',
        name: 'tsla-tabs',
        className: 'tsla-tabs--radio',
        id: 'tsla-tab-0',
        value: 0,
        checked: true
      }),
      _react2.default.createElement(
        'label',
        { className: 'tsla-tabs--label', htmlFor: 'tsla-tab-0' },
        'foo'
      ),
      _react2.default.createElement(
        _.TabDrawer,
        null,
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      )
    ))).toBe(true);
  });

  it('should handle multiple <TabContent />', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(
      _2.default,
      null,
      _react2.default.createElement(
        _.TabContent,
        { title: 'foo' },
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      ),
      _react2.default.createElement(
        _.TabContent,
        { title: 'zoo' },
        _react2.default.createElement(
          'p',
          null,
          'Roar'
        )
      )
    )).dive().dive().matchesElement(_react2.default.createElement(
      'div',
      { className: 'tsla-tabs' },
      _react2.default.createElement('input', {
        type: 'radio',
        name: 'tsla-tabs',
        className: 'tsla-tabs--radio',
        id: 'tsla-tab-0',
        value: 0,
        checked: true
      }),
      _react2.default.createElement(
        'label',
        { className: 'tsla-tabs--label', htmlFor: 'tsla-tab-0' },
        'foo'
      ),
      _react2.default.createElement(
        _.TabDrawer,
        null,
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      ),
      _react2.default.createElement('input', {
        type: 'radio',
        name: 'tsla-tabs',
        className: 'tsla-tabs--radio',
        id: 'tsla-tab-1',
        value: 1,
        checked: false
      }),
      _react2.default.createElement(
        'label',
        { className: 'tsla-tabs--label', htmlFor: 'tsla-tab-1' },
        'zoo'
      ),
      _react2.default.createElement(
        _.TabDrawer,
        null,
        _react2.default.createElement(
          'p',
          null,
          'Roar'
        )
      )
    ))).toBe(true);
  });

  it('should handle selected attribute', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(
      _2.default,
      null,
      _react2.default.createElement(
        _.TabContent,
        { title: 'foo' },
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      ),
      _react2.default.createElement(
        _.TabContent,
        { title: 'zoo', selected: true },
        _react2.default.createElement(
          'p',
          null,
          'Roar'
        )
      )
    )).dive().dive().matchesElement(_react2.default.createElement(
      'div',
      { className: 'tsla-tabs' },
      _react2.default.createElement('input', {
        type: 'radio',
        name: 'tsla-tabs',
        className: 'tsla-tabs--radio',
        id: 'tsla-tab-0',
        value: 0,
        checked: false
      }),
      _react2.default.createElement(
        'label',
        { className: 'tsla-tabs--label', htmlFor: 'tsla-tab-0' },
        'foo'
      ),
      _react2.default.createElement(
        _.TabDrawer,
        null,
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      ),
      _react2.default.createElement('input', {
        type: 'radio',
        name: 'tsla-tabs',
        className: 'tsla-tabs--radio',
        id: 'tsla-tab-1',
        value: 1,
        checked: true
      }),
      _react2.default.createElement(
        'label',
        { className: 'tsla-tabs--label', htmlFor: 'tsla-tab-1' },
        'zoo'
      ),
      _react2.default.createElement(
        _.TabDrawer,
        null,
        _react2.default.createElement(
          'p',
          null,
          'Roar'
        )
      )
    ))).toBe(true);
  });

  it('should handle onChange', function () {
    var onChange = jest.fn();
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(
      _2.default,
      { onChange: onChange },
      _react2.default.createElement(
        _.TabContent,
        { title: 'foo' },
        _react2.default.createElement(
          'p',
          null,
          'Bar'
        )
      ),
      _react2.default.createElement(
        _.TabContent,
        { title: 'zoo', selected: true },
        _react2.default.createElement(
          'p',
          null,
          'Roar'
        )
      )
    )).dive();
    expect(onChange.mock.calls.length).toBe(0);
    wrapper.dive().find('#tsla-tab-1').simulate('change', { target: { value: 0 } });
    expect(onChange.mock.calls.length).toBe(1);
  });
});

describe('<TabContent />', function () {
  it('should render without throwing an error', function () {
    var wrapperInstance = (0, _enzyme.shallow)(_react2.default.createElement(
      _.TabContent,
      { title: 'foo' },
      _react2.default.createElement(
        'p',
        null,
        'Bar'
      )
    )).instance();
    expect(wrapperInstance.props.title).toBe('foo');
  });
});

describe('<TabDrawer />', function () {
  it('should render without throwing an error', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(
      _.TabDrawer,
      null,
      _react2.default.createElement(
        'p',
        null,
        'Foo'
      )
    )).matchesElement(_react2.default.createElement(
      'div',
      { className: 'tsla-tabs--drawer' },
      _react2.default.createElement(
        'p',
        null,
        'Foo'
      )
    ))).toBe(true);
  });
});