'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconSizes = exports.IconTypes = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icons = require('../../scss/_particles/extras/_icons.scss');

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cssModulesClassNames(originClassNames) {
  if (originClassNames.length) {
    return originClassNames.map(function (className) {
      return _icons2.default[className];
    });
  }

  var resolvedClassNames = {};
  for (var className in originClassNames) {
    if (originClassNames.hasOwnProperty(className)) {
      resolvedClassNames[_icons2.default[className]] = originClassNames[className];
    }
  }
  return (0, _classnames2.default)(resolvedClassNames);
}

var IconTypes = exports.IconTypes = {
  // Icons with circles around them
  CircleAngleLeft: 'angle-left-circle',
  CircleAngleRight: 'angle-right-circle',
  CircleAngleUp: 'angle-up-circle',
  CircleAngleDown: 'angle-down-circle',
  CirclePlus: 'plus-circle',
  CircleMinus: 'minus-circle',
  CircleClose: 'close-circle',
  CircleCheckmark: 'checkmark-circle',
  CircleQuestionMark: 'question-circle',
  CircleInfo: 'info-circle',

  // standard icons
  AngleLeft: 'angle-left',
  AngleRight: 'angle-right',
  AngleUp: 'angle-up',
  AngleDown: 'angle-down',
  Dot: 'dot',
  Magnify: 'magnify',
  Printer: 'printer',
  Email: 'email',
  Camera: 'camera',
  Calendar: 'calendar',

  // Social Sharing icons
  Twitter: 'twitter',
  Facebook: 'facebook',
  Gplus: 'gplus',
  Weibo: 'weibo',
  Wechat: 'wechat',

  // Branding Icons
  TeslaE: 'branding-e',
  TeslaLogo: 'branding-logo',

  // Vehicle-specific Icons
  SteeringWheel: 'steering_wheel',
  Door: 'door',
  Hepa: 'hepa',
  Performance: 'performance',
  Premium: 'premium',
  Sound: 'sound',
  Weather: 'weather',
  Suspension: 'suspension'
};

// Icon sizes
var IconSizes = exports.IconSizes = {
  Xsmall: 'xsmall',
  Small: 'small',
  Medium: 'medium',
  Large: 'large',
  Xlarge: 'xlarge',
  Xxlarge: 'xxlarge',
  Jumbo: 'jumbo'
};

function Icon(props) {
  var iconClasses = {
    // Icons with circles around them
    'tsla-icon-angle_left--circle': props.type === IconTypes.CircleAngleLeft,
    'tsla-icon-angle_right--circle': props.type === IconTypes.CircleAngleRight,
    'tsla-icon-angle_up--circle': props.type === IconTypes.CircleAngleUp,
    'tsla-icon-angle_down--circle': props.type === IconTypes.CircleAngleDown,
    'tsla-icon-plus--circle': props.type === IconTypes.CirclePlus,
    'tsla-icon-minus--circle': props.type === IconTypes.CircleMinus,
    'tsla-icon-close--circle': props.type === IconTypes.CircleClose,
    'tsla-icon-checkmark--circle': props.type === IconTypes.CircleCheckmark,
    'tsla-icon-question--circle': props.type === IconTypes.CircleQuestionMark,
    'tsla-icon-info--circle': props.type === IconTypes.CircleInfo,

    // standard icons
    'tsla-icon-angle_left': props.type === IconTypes.AngleLeft,
    'tsla-icon-angle_right': props.type === IconTypes.AngleRight,
    'tsla-icon-angle_up': props.type === IconTypes.AngleUp,
    'tsla-icon-angle_down': props.type === IconTypes.AngleDown,
    'tsla-icon-dot': props.type === IconTypes.Dot,
    'tsla-icon-magnify': props.type === IconTypes.Magnify,
    'tsla-icon-printer': props.type === IconTypes.Printer,
    'tsla-icon-email': props.type === IconTypes.Email,
    'tsla-icon-camera': props.type === IconTypes.Camera,
    'tsla-icon-calendar': props.type === IconTypes.Calendar,

    // Social Sharing icons
    'tsla-icon-twitter': props.type === IconTypes.Twitter,
    'tsla-icon-facebook': props.type === IconTypes.Facebook,
    'tsla-icon-gplus': props.type === IconTypes.Gplus,
    'tsla-icon-weibo': props.type === IconTypes.Weibo,
    'tsla-icon-wechat': props.type === IconTypes.Wechat,

    // Branding Icons
    'tsla-icon-e': props.type === IconTypes.TeslaE,
    'tsla-icon-logo': props.type === IconTypes.TeslaLogo,

    // Vehicle-specific Icons
    'tsla-icon_car--steering_wheel': props.type === IconTypes.SteeringWheel,
    'tsla-icon_car--door': props.type === IconTypes.Door,
    'tsla-icon_car--hepa': props.type === IconTypes.Hepa,
    'tsla-icon_car--performance': props.type === IconTypes.Performance,
    'tsla-icon_car--premium': props.type === IconTypes.Premium,
    'tsla-icon_car--sound': props.type === IconTypes.Sound,
    'tsla-icon_car--weather': props.type === IconTypes.Weather,
    'tsla-icon_car--suspension': props.type === IconTypes.Suspension,

    // Icon sizes
    'tsla-icon_size--xsmall': props.size === IconSizes.Xsmall,
    'tsla-icon_size--small': props.size === IconSizes.Small,
    'tsla-icon_size--medium': props.size === IconSizes.Medium,
    'tsla-icon_size--large': props.size === IconSizes.Large,
    'tsla-icon_size--xlarge': props.size === IconSizes.Xlarge,
    'tsla-icon_size--xxlarge': props.size === IconSizes.Xxlarge,
    'tsla-icon_size--jumbo': props.size === IconSizes.Jumbo
  };
  return _react2.default.createElement(
    'i',
    { className: cssModulesClassNames(iconClasses), style: props.style },
    props.children
  );
}

Icon.propTypes = {
  type: _propTypes2.default.oneOf(Array.from(Object.keys(IconTypes), function (v) {
    return IconTypes[v];
  })).isRequired,
  size: _propTypes2.default.oneOf(Array.from(Object.keys(IconSizes), function (v) {
    return IconSizes[v];
  })).isRequired,
  style: _propTypes2.default.shape(),
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

Icon.defaultProps = {
  style: {},
  children: null
};

exports.default = Icon;