'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _ = require('./');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Alert />', function () {
  it('should render without throwing an error', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, null)).matchesElement(_react2.default.createElement('div', { className: 'particles-alert particles-alert--info' }))).toBe(true);
  });

  it('should support different types', function () {
    var types = Array.from(Object.keys(_.AlertTypes), function (v) {
      return _.AlertTypes[v];
    });
    types.forEach(function (type) {
      expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { type: type })).is('.particles-alert--' + type)).toBe(true);
    });
  });

  it('should support alternate styling', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { alternate: true })).matchesElement(_react2.default.createElement('div', { className: 'particles-alert particles-alert--info particles-alert--alternate' }))).toBe(true);

    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { alternate: false })).matchesElement(_react2.default.createElement('div', { className: 'particles-alert particles-alert--info' }))).toBe(true);
  });

  it('should support custom styling', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { style: { color: 'blue' } })).matchesElement(_react2.default.createElement('div', { className: 'particles-alert particles-alert--info', style: { color: 'blue' } }))).toBe(true);
  });

  it('should render close button', function () {
    var onClose = jest.fn();
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { onClose: onClose })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'particles-alert particles-alert--info' },
      _react2.default.createElement(
        'i',
        {
          tabIndex: '0',
          role: 'button',
          className: 'alert-link',
          'data-trigger': 'close',
          onKeyPress: onClose,
          onClick: onClose
        },
        '\xD7'
      )
    ))).toBe(true);
  });

  it('should click on close button', function () {
    var onClose = jest.fn();
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_2.default, { onClose: onClose }));
    expect(wrapper.matchesElement(_react2.default.createElement(
      'div',
      { className: 'particles-alert particles-alert--info' },
      _react2.default.createElement(
        'i',
        {
          tabIndex: '0',
          role: 'button',
          className: 'alert-link',
          'data-trigger': 'close',
          onKeyPress: onClose,
          onClick: onClose
        },
        '\xD7'
      )
    ))).toBe(true);

    // simulate click
    expect(onClose.mock.calls.length).toBe(0);
    wrapper.find('[data-trigger="close"]').simulate('click');
    expect(onClose.mock.calls.length).toBe(1);
  });
}); /* global describe, it, expect, jest */