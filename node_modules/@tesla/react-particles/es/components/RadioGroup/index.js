'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('../../scss/_particles/components/_forms/_radio.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function RadioGroup(props) {
  return _react2.default.createElement(
    'div',
    { style: props.style },
    props.choices.map(function (choice) {
      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('form-item', props.itemClassName), key: choice, style: props.itemStyle },
        _react2.default.createElement(
          'label',
          { htmlFor: props.name + '-' + choice, className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            choice
          ),
          _react2.default.createElement('input', { id: props.name + '-' + choice, type: 'radio', name: props.name, value: choice, className: (0, _classnames2.default)('radio', props.className), onChange: props.onChange, checked: choice === props.selected }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      );
    })
  );
}

RadioGroup.propTypes = {
  name: _propTypes2.default.string.isRequired,
  choices: _propTypes2.default.arrayOf(_propTypes2.default.string),
  selected: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  className: _propTypes2.default.string,
  itemClassName: _propTypes2.default.string,
  style: _propTypes2.default.shape(),
  itemStyle: _propTypes2.default.shape()
};

RadioGroup.defaultProps = {
  choices: [],
  selected: null,
  onChange: function onChange() {},
  className: '',
  itemClassName: '',
  style: {},
  itemStyle: {}
};

exports.default = RadioGroup;