'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _ = require('./');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<RadioGroup />', function () {
  it('should render without throwing an error', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo' })).matchesElement(_react2.default.createElement('div', null))).toBe(true);

    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', choices: ['zoo', 'bar'] })).matchesElement(_react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'zoo' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-zoo', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'zoo'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'zoo', className: 'radio' }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      ),
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'bar' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-bar', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'bar'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'bar', className: 'radio' }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      )
    ))).toBe(true);
  });

  it('should support custom classes', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { className: 'coffee', name: 'foo', choices: ['zoo', 'bar'] })).matchesElement(_react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'zoo' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-zoo', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'zoo'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'zoo', className: 'radio coffee' }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      ),
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'bar' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-bar', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'bar'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'bar', className: 'radio coffee' }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      )
    ))).toBe(true);
  });

  it('should support selected choices', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', choices: ['zoo', 'bar'], selected: 'zoo' })).matchesElement(_react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'zoo' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-zoo', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'zoo'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'zoo', className: 'radio', checked: true }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      ),
      _react2.default.createElement(
        'div',
        { className: 'form-item', key: 'bar' },
        _react2.default.createElement(
          'label',
          { htmlFor: 'foo-bar', className: 'form-label label-radio' },
          _react2.default.createElement(
            'span',
            null,
            'bar'
          ),
          _react2.default.createElement('input', { type: 'radio', name: 'foo', value: 'bar', className: 'radio' }),
          _react2.default.createElement('i', { className: 'icon-radio' })
        )
      )
    ))).toBe(true);
  });

  it('should trigger onChange', function () {
    var onChange = jest.fn();
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', choices: ['zoo', 'bar'], onChange: onChange }));
    // simulate change
    expect(onChange.mock.calls.length).toBe(0);
    wrapper.find('[name="foo"]').first().simulate('change');
    expect(onChange.mock.calls.length).toBe(1);
  });
}); /* global describe, it, expect, jest */