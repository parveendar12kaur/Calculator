'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _ = require('./');

var _2 = _interopRequireDefault(_);

var _FormError = require('../FormError');

var _FormError2 = _interopRequireDefault(_FormError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global describe, it, expect */
describe('<Input/>', function () {
  describe('required props', function () {
    it('requires a name prop', function () {
      expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo' })).matchesElement(_react2.default.createElement(
        'div',
        { className: 'form-item' },
        _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
        _react2.default.createElement('input', {
          id: 'foo',
          type: 'text',
          name: 'foo',
          className: 'form-text'
        })
      ))).toBe(true);
    });
  });

  it('supports rounded prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', rounded: true })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item' },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        type: 'text',
        name: 'foo',
        className: 'form-text input-rounded'
      })
    ))).toBe(true);
  });

  it('supports disabled prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', disabled: true })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item' },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        type: 'text',
        name: 'foo',
        className: 'form-text',
        disabled: true
      })
    ))).toBe(true);
  });

  it('supports className prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', className: 'foobar' })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item foobar' },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        type: 'text',
        name: 'foo',
        className: 'form-text'
      })
    ))).toBe(true);
  });

  it('supports style prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', style: { foo: 'bar' } })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item', style: { foo: 'bar' } },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        type: 'text',
        name: 'foo',
        className: 'form-text'
      })
    ))).toBe(true);
  });

  it('supports placeholder prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', placeholder: 'bar' })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item' },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        className: 'form-text',
        name: 'foo',
        placeholder: 'bar'
      })
    ))).toBe(true);
  });

  it('supports error prop', function () {
    expect((0, _enzyme.shallow)(_react2.default.createElement(_2.default, { name: 'foo', error: 'There was an error!' })).matchesElement(_react2.default.createElement(
      'div',
      { className: 'form-item' },
      _react2.default.createElement('label', { htmlFor: 'foo', className: 'form-label' }),
      _react2.default.createElement('input', {
        id: 'foo',
        type: 'text',
        name: 'foo',
        className: 'form-text form-error'
      }),
      _react2.default.createElement(_FormError2.default, { message: 'There was an error!' })
    ))).toBe(true);
  });
});