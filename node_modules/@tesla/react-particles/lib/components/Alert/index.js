'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlertTypes = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AlertTypes = exports.AlertTypes = {
  Info: 'info',
  Warn: 'warn',
  Error: 'error',
  Success: 'success'
};

function Alert(props) {
  var _alertClasses;

  var alertClasses = (_alertClasses = {}, _defineProperty(_alertClasses, 'particles-alert--' + props.type, !!props.type), _defineProperty(_alertClasses, 'particles-alert--alternate', props.alternate), _alertClasses);
  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)('particles-alert', alertClasses), style: props.style },
    props.children,
    props.onClose && _react2.default.createElement(
      'i',
      {
        role: 'button',
        tabIndex: '0',
        className: 'alert-link',
        'data-trigger': 'close',
        onKeyPress: props.onClose,
        onClick: props.onClose
      },
      '\xD7'
    )
  );
}

Alert.propTypes = {
  type: _propTypes2.default.oneOf(Array.from(Object.keys(AlertTypes), function (v) {
    return AlertTypes[v];
  })),
  onClose: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
  alternate: _propTypes2.default.bool,
  style: _propTypes2.default.shape()
};

Alert.defaultProps = {
  type: AlertTypes.Info,
  onClose: null,
  alternate: false,
  style: {},
  children: null
};

exports.default = Alert;