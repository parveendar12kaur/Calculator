'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavListItemTypes = exports.HeaderTypes = undefined;
exports.Nav = Nav;
exports.NavList = NavList;
exports.NavListItem = NavListItem;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _tslaHeader = require('../../scss/_particles/components/_tsla-header.scss');

var _tslaHeader2 = _interopRequireDefault(_tslaHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var HeaderTypes = exports.HeaderTypes = {
  Default: 'default',
  SemiTransparent: 'semitransparent',
  Transparent: 'transparent'
};

function Header(props) {
  var _classNames;

  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, _tslaHeader2.default['tsla-header-semitransparent'], props.type === HeaderTypes.SemiTransparent), _defineProperty(_classNames, _tslaHeader2.default['tsla-header-transparent'], props.type === HeaderTypes.Transparent), _classNames))
    },
    _react2.default.createElement('input', {
      type: 'checkbox',
      id: 'tsla-header-nav--secondary_show',
      className: _tslaHeader2.default['tsla-header-checkbox']
    }),
    _react2.default.createElement(
      'header',
      { className: _tslaHeader2.default['tsla-header-main'] },
      _react2.default.createElement(
        'div',
        { className: _tslaHeader2.default['tsla-header-main--container'] },
        _react2.default.createElement(
          'div',
          { className: _tslaHeader2.default['container'] },
          !props.hideLogo && _react2.default.createElement(
            'h1',
            { className: _tslaHeader2.default['tsla-header-main--logo_container'] },
            _react2.default.createElement(
              'a',
              {
                href: props.logoTo,
                className: _tslaHeader2.default['tsla-header-main--logo'],
                title: 'Tesla Motors',
                onClick: props.logoOnClick
              },
              'Tesla, Inc'
            )
          ),
          _react2.default.createElement('input', {
            type: 'checkbox',
            id: 'tsla-header-main--trigger',
            className: _tslaHeader2.default['tsla-header-checkbox']
          }),
          _react2.default.createElement(
            'label',
            { htmlFor: 'tsla-header-main--trigger' },
            _react2.default.createElement(
              'span',
              { className: _tslaHeader2.default['tsla-header-main--trigger_icon'] },
              _react2.default.createElement(
                'i',
                { className: _tslaHeader2.default['tsla-header-main--cross_hatch'] },
                '\xD7'
              )
            )
          ),
          props.children,
          _react2.default.createElement('span', { id: 'tsla-header-mask' })
        )
      )
    )
  );
}

Header.propTypes = {
  type: _propTypes2.default.oneOf(Array.from(Object.keys(HeaderTypes), function (v) {
    return HeaderTypes[v];
  })),
  hideLogo: _propTypes2.default.bool,
  logoTo: _propTypes2.default.string,
  logoOnClick: _propTypes2.default.func,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

Header.defaultProps = {
  hideLogo: false,
  logoTo: '/',
  type: HeaderTypes.Default,
  logoOnClick: function logoOnClick() {},
  children: null
};

function Nav(props) {
  return _react2.default.createElement(
    'nav',
    { className: _tslaHeader2.default['tsla-header-nav'] },
    props.children
  );
}

Nav.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

Nav.defaultProps = {
  children: null
};

function NavList(props) {
  var _classNames2;

  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)((_classNames2 = {}, _defineProperty(_classNames2, _tslaHeader2.default['tsla-header-nav--primary'], props.primary), _defineProperty(_classNames2, _tslaHeader2.default['tsla-header-nav--secondary'], !props.primary), _classNames2))
    },
    !props.primary && _react2.default.createElement(
      'label',
      {
        htmlFor: 'tsla-header-nav--secondary_show',
        className: _tslaHeader2.default['tsla-header-nav--list_link']
      },
      'More ',
      _react2.default.createElement(
        'span',
        { className: _tslaHeader2.default['tsla-header--more_caret'] },
        '\u203A'
      )
    ),
    _react2.default.createElement(
      'ol',
      { className: (0, _classnames2.default)(_tslaHeader2.default['tsla-header-nav--list'], _defineProperty({}, _tslaHeader2.default['tsla-header-nav--parent_nav'], !props.primary))
      },
      props.children
    )
  );
}

NavList.propTypes = {
  primary: _propTypes2.default.bool,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

NavList.defaultProps = {
  primary: false,
  children: null
};

var NavListItemTypes = exports.NavListItemTypes = {
  Anchor: 'anchor',
  Static: 'static'
};

function NavListItem(props) {
  return _react2.default.createElement(
    'li',
    { className: (0, _classnames2.default)(_tslaHeader2.default['tsla-header-nav--list_item'], _defineProperty({}, _tslaHeader2.default['tsla-header-nav--selected'], props.selected)) },
    props.type === 'anchor' && _react2.default.createElement(
      'a',
      { href: props.to, className: _tslaHeader2.default['tsla-header-nav--list_link'], onClick: props.onClick },
      props.children
    ),
    props.type !== 'anchor' && _react2.default.createElement(
      'span',
      { className: _tslaHeader2.default['tsla-header-nav--list_link'] },
      props.children
    )
  );
}

NavListItem.propTypes = {
  type: _propTypes2.default.oneOf(Array.from(Object.keys(NavListItemTypes), function (v) {
    return NavListItemTypes[v];
  })),
  selected: _propTypes2.default.bool,
  onClick: _propTypes2.default.func,
  to: _propTypes2.default.string,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

NavListItem.defaultProps = {
  type: NavListItemTypes.Anchor,
  selected: false,
  onClick: function onClick() {},
  to: '',
  children: null
};

exports.default = Header;