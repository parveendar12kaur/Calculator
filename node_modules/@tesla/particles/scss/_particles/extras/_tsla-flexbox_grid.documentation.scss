/*doc
---
title: Introduction
name: 00_flexgrid
category: Layout - Flexbox Grid
---

Flexbox grids are all the rage now. We should have a common foundation from which to build them from. The grid system for Tesla is fairly simplistic in that it doesn't require a lot to really understand or use. The framework laid out here sets a solid foundation from which to build rich and compelling UIs from.

This foundation is based heavily on Philip Walton's [Solved by Flexbox](https://philipwalton.github.io/solved-by-flexbox/demos/grids/) post.

Futher details from [Solved by Flexbox](https://philipwalton.github.io/solved-by-flexbox/demos/grids/):

- By default, each grid cell is the same width and height as every other cell in the row. Basically they all size to fit by default.
- For finer control, you can add sizing classes to individual cells. Without these classes, the cells simply divide up the available space as usual.
- For responsive grids, you can add media query-specific classes to the cells.
- Individual cells can be aligned vertically to the top, bottom, or middle.
- When you want all of the cells in a grid to have the same sizing, media, or alignment values, you should be able to just add a single class to the container to avoid unnecessary repetition.
- Grids can be nested as many levels deep as needed.


## Flex Grid Mixins

To make things a bit easier and hopefully avoid class-itis, a few mixins have been created to assist in custom development. These are used by the grid classes listed below as well.

```sass_example
@mixin tslaflexgrid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin tslaflexgrid__gutters {
  @include susy-breakpoint($mobile-only) {
    margin-top: -$gutter / 2;
    margin-bottom: $gutter / 2;
    margin-left: -$gutter / 2;
  }

  @include susy-breakpoint($small-desktop) {
    margin-top: -$gutter;
    margin-bottom: $gutter;
    margin-left: -$gutter;
  }

  .tsla-flex_grid--gutters {
    @include susy-breakpoint($mobile-only) {
      margin-bottom: 0;
    }

    @include susy-breakpoint($small-desktop) {
      margin-bottom: 0;
    }
  }
}

@mixin tslaflexgrid__item {
  @include susy-breakpoint($mobile-only) {
    padding-top: $gutter / 2;
    padding-left: $gutter / 2;
  }
  @include susy-breakpoint($small-desktop) {
    padding-top: $gutter;
    padding-left: $gutter;
  }
  flex: 1;
}
```

Using any of these mixins is going to be identical to using any other mixins.

<pre class="highlight"><code>
.someclass {
  @include tslaflexgrid;
  @include tslaflexgrid__gutters;
  @include tslaflexgrid__item;

  // more styling
}

</code></pre>


*/

/*doc
---
title: Basic Grids
name: 01_flexgrid
category: Layout - Flexbox Grid
---

The grid cells below do not specify any widths, they just naturally space themselves equally and expand to fit the entire row. They're also equal height by default.

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/2</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/2</div>
  </div>
</div>
<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/3</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/3</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/3</div>
  </div>
</div>
<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/4</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/4</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/4</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">1/4</div>
  </div>
</div>
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--flex_cells">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full-height, even when my content doesn't fill the space.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum mollis velit non gravida venenatis. Praesent consequat lectus purus, ut scelerisque velit condimentum eu. Maecenas sagittis ante ut turpis varius interdum. Quisque tellus ipsum, eleifend non ipsum id, suscipit ultricies neque.</div>
  </div>
</div>


<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">primary</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">secondary</div>
  </div>
</div>
```
*/


/*doc
---
title: Individual Sizing
name: 02_flexgrid
category: Layout - Flexbox Grid
---

When equal widths aren’t what you want, you can add sizing classes to individual cells. Cells without sizing classes simply divide up the remaining space as normal.

The cells below labeled “auto” do not have sizing classes specified.

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item tsla-flex_grid--col_1of2">
    <div class="styleguide-demo">1/2</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">auto</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">auto</div>
  </div>
</div>

<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">auto</div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--col_1of3">
    <div class="styleguide-demo">1/3</div>
  </div>
</div>

<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item tsla-flex_grid--col_1of4">
    <div class="styleguide-demo">1/4</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">auto</div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--col_1of3">
    <div class="styleguide-demo">1/3</div>
  </div>
</div>
```
*/

/*doc

---
title: Responsive
name: 03_flexgrid
category: Layout - Flexbox Grid
---

Responsive Grids work by adding media classes to the Grid cells or containers. When those media values are met, the grids automatically adjust accordingly.

The cells below should be full width by default and scaled to fit above 48em. Resize your browser to see them in action.

## `.tsla-flex_grid--large--fit`

<p class="styleguide"></p>

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--full tsla-flex_grid--large--fit">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Halves</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Halves</div>
  </div>
</div>
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--full tsla-flex_grid--large--fit">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
</div>
```

<br>

## `.tsla-flex_grid--small--fit`

<p class="styleguide"></p>

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--full tsla-flex_grid--small--fit">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Halves</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Halves</div>
  </div>
</div>
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--full tsla-flex_grid--large--fit">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Full / Thirds</div>
  </div>
</div>
```

*/

/*doc
---
title: Grid-ception
name: 04_flexgrid
category: Layout - Flexbox Grid
---

Grid components are infinitely nestable inside of other grid components.

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--flex_cells">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">
      <div class="tsla-flex_grid tsla-flex_grid--gutters">
        <div class="tsla-flex_grid--item tsla-flex_grid--col_1of3">
          <div class="styleguide-demo">1/3</div>
        </div>
        <div class="tsla-flex_grid--item">
          <div class="styleguide-demo">
            <div class="tsla-flex_grid tsla-flex_grid--gutters">
              <div class="tsla-flex_grid--item">
                <div class="styleguide-demo">1/2</div>
              </div>
              <div class="tsla-flex_grid--item">
                <div class="styleguide-demo">1/2</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--col_1of3">
    <div class="styleguide-demo">1/3</div>
  </div>
</div>
```

*/

/*doc
---
title: Alignment Features
name: 05_flexgrid
category: Layout - Flexbox Grid
---

## Top-aligned Grid Cells

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--top">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">This cell should be top-aligned.</div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--item--col_1of2">
    <div class="styleguide-demo">Pellentesque sagittis vel erat ac laoreet. Phasellus ac aliquet enim, eu aliquet sem. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pulvinar porta leo, eu ultricies nunc sollicitudin vitae. Curabitur pulvinar dolor lectus, quis porta turpis ullamcorper nec. Quisque eget varius turpis, quis iaculis nibh.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">This cell should be top-aligned.</div>
  </div>
</div>
```

## Bottom-aligned Grid Cells

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--bottom">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">This cell should be bottom-aligned.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Curabitur pulvinar dolor lectus, quis porta turpis ullamcorper nec. Quisque eget varius turpis, quis iaculis nibh. Ut interdum ligula id metus hendrerit cursus. Integer eu leo felis. Aenean commodo ultrices nunc, sit amet blandit elit gravida in.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">This cell should be bottom-aligned.</div>
  </div>
</div>
```

## Vertically-Centered Grid Cells

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters tsla-flex_grid--center">
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">This cell should be vertically-centered with the cell to its right.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Curabitur pulvinar dolor lectus, quis porta turpis ullamcorper nec. Quisque eget varius turpis, quis iaculis nibh. Ut interdum ligula id metus hendrerit cursus. Integer eu leo felis. Aenean commodo ultrices nunc, sit amet blandit elit gravida in. Sed est ligula, ornare ac nisi adipiscing, iaculis facilisis tellus. Nullam vel facilisis libero. Duis semper lobortis elit, vitae dictum erat.</div>
  </div>
</div>
```

## Mixed Vertical Aligment

```html_example
<div class="tsla-flex_grid tsla-flex_grid--gutters">
  <div class="tsla-flex_grid--item Grid-cell--top">
    <div class="styleguide-demo">This cell should be top aligned.</div>
  </div>
  <div class="tsla-flex_grid--item">
    <div class="styleguide-demo">Curabitur pulvinar dolor lectus, quis porta turpis ullamcorper nec. Quisque eget varius turpis, quis iaculis nibh. Ut interdum ligula id metus hendrerit cursus. Integer eu leo felis. Aenean commodo ultrices nunc, sit amet blandit elit gravida in. Sed est ligula, ornare ac nisi adipiscing, iaculis facilisis tellus.</div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--item--center">
    <div class="styleguide-demo">This cell should be center-aligned.</div>
  </div>
  <div class="tsla-flex_grid--item tsla-flex_grid--item--bottom">
    <div class="styleguide-demo">This cell should be bottom-aligned.</div>
  </div>
</div>
```
*/
