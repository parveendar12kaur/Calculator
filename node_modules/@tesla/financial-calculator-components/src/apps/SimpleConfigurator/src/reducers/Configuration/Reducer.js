import _uniq from 'lodash/uniq'
import _pick from 'lodash/pick'
import _forOwn from 'lodash/forOwn'
import _find from 'lodash/find'
import _reduce from 'lodash/reduce'
import _get from 'lodash/get'
import initialState from './InitialState'
import {
	APP_NAME,
	CONFIGURATION_CHANGE,
    CONFIGURATOR_DATA_LOADED
} from 'dictionary'

const Reducer = (state = initialState,  action) => {
    switch(action.type) {
        case CONFIGURATION_CHANGE:
            return Object.assign({}, state, {
                currentOptions: action.currentOptions,
                userSelectedOptions: parseUserSelectedOptions(state, action.selectedOption)
            })
        case CONFIGURATOR_DATA_LOADED: 
            const base_configuration = action.lexicon.base_configuration.concat()
            return Object.assign({}, state, {
                lexicon: action.lexicon,
                ui: action.ui,
                currentOptions: base_configuration
            })
        default:
            return state
    }
}

function parseUserSelectedOptions(state, selectedOption) {
    return _uniq(state.userSelectedOptions.push(selectedOption))
}




export default Reducer