const path = require('path');
const webpack = require('webpack')
const HtmlWebPackPlugin = require("html-webpack-plugin")

const plugins = [
    require('@babel/plugin-proposal-object-rest-spread'),
    require('@babel/plugin-syntax-export-default-from')
]

const DEV = 'development'
const mode = process.env.NODE_ENV || DEV

module.exports = {
    mode,    
    devtool: "cheap-module-eval-source-map",
    devServer: {
       open: true,
       contentBase: ['./src','./dev', './dist']
    },
    entry: {
        'registry': ['./dev/registry.js'],
        'configurator': ['./src/apps/SimpleConfigurator/src/index.js'],
    },
    output: {
        path: path.resolve(__dirname, 'dist/js'),
        filename: mode === DEV ? './[name].bundle.js' : './[name].bundle.min.js'
    },
    module: {
        rules: [{
            test: /\.js$/,
            exclude: /(node_modules)/,
            use: {
                loader: 'babel-loader',
                options: {
                	presets: ['@babel/preset-env','@babel/preset-react'],
                    plugins: plugins
                }
            }
        },
        {
            test: /\.scss$/,
            use: [{
                loader: "style-loader"
            }, {
                loader: "css-loader"
            }, {
                loader: "sass-loader",
                options: {
                    includePaths: ["./src/styles"]
                }
            }]
        }]
    },
    plugins: [
        new HtmlWebPackPlugin({
          template: "./dev/configurator.html",
          filename: "./index.html"
        })    
    ]
};