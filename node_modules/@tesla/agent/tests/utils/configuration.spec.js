const path = require('path');
const chai = require('chai');
const expect = chai.expect;

const Configuration = require(path.resolve(__dirname, '../../dist/utils/configuration'));

describe('Configuration', () => {

    describe('getOptionList method ', () => {
        it('should return empty if configuration does not have options', () => {
            let options = Configuration.getOptionList({});
            expect(Array.isArray(options)).to.equal(true);
            expect(options.length).to.equal(0);
        });
    });

    describe('getAllPossibleConfiguration method', () => {
        it('should return the all possible option codes combination list', () => {
            let lexicon = {
                groups: [
                    {
                        "required": false,
                        "exclusive": true,
                        "options": [
                            'AAAA'
                        ]
                    },
                    {
                        "required": true,
                        "exclusive": true,
                        "options": [
                            'BBBB',
                            'CCCC'
                        ]
                    },
                    {
                        "required": true,
                        "exclusive": true,
                        "options": [
                            'DDDD'
                        ]
                    },
                    {
                        "required": false,
                        "exclusive": false,
                        "options": [
                            'EEEE',
                            'FFFF'
                        ]
                    }
                ]
            };
            let configurationList = [
                ["BBBB", "DDDD", "EEEE", "FFFF"],
                ["AAAA", "BBBB", "DDDD", "EEEE", "FFFF"],
                ["CCCC", "DDDD", "EEEE", "FFFF"],
                ["AAAA", "CCCC", "DDDD", "EEEE", "FFFF"],
                ["BBBB", "DDDD", "FFFF"],
                ["AAAA", "BBBB", "DDDD", "FFFF"],
                ["CCCC", "DDDD", "FFFF"],
                ["AAAA", "CCCC", "DDDD", "FFFF"],
                ["BBBB", "DDDD", "EEEE"],
                ["AAAA", "BBBB", "DDDD", "EEEE"],
                ["CCCC", "DDDD", "EEEE"],
                ["AAAA", "CCCC", "DDDD", "EEEE"],
                ["BBBB", "DDDD"],
                ["AAAA", "BBBB", "DDDD"],
                ["CCCC", "DDDD"],
                ["AAAA", "CCCC", "DDDD"]
            ];
            expect(JSON.stringify(Configuration.getAllPossibleConfiguration(lexicon))).to.equal(JSON.stringify(configurationList));
        });
    });
});