const path = require('path');
const chai = require('chai');
const expect = chai.expect;

const utils = require(path.resolve(__dirname, '../utils'));
const Agent = require(path.resolve(__dirname, '../../dist'));
const LEXICONS = require(path.resolve(__dirname, '../fixtures/lexiconFromOCW.json'));

describe('Transformer with lexiconFromOCW', () => {
    it('should transform marketing configuration to manufacturing option list by given lexicon', () => {
        let sourceOptionList = ['$APF2','$APPB','$BT37','$IN3PB','$MDL3','$PBSB','$PRM31','$W38B'];
        let transformedOptionList = ['AD15','AF00','APH3','AU3P','BC3B','BT37','CDM0','CH07','COUS','DRLH','DV2W','FG31','FM3B','GLFR','HL31','HM31','ID3W','IL31','LTPB','MDL3','MI00','MR31','PBSB','PC30','RENA','RF3G','RS3H','S3PB','SA3P','SC00','STCP','SU3C','T3MA','TM00','TW00','UT3P','W38B','WR00','ZCST','APF2','FC3P'];
        let mappedResult = Agent.mapOptions(sourceOptionList, LEXICONS);
        expect(mappedResult.data.indexOf('PBSB') > -1).to.equal(true);
    });

    it('should transform marketing configuration to manufacturing option list by given lexicon', () => {
    	let sourceOptionList = ['AD15','AF00','APH3','AU3P','BC3B','BT37','CDM0','CH07','COUS','DRLH','DV2W','FG31','FM3B','GLFR','HL31','HM31','ID3W','IL31','LTPB','MDL3','MI00','MR31','PBSB','PC30','RENA','RF3G','RS3H','S3PB','SA3P','SC00','STCP','SU3C','T3MA','TM00','TW00','UT3P','W38B','WR00','ZCST','APF2','FC3P'];
        let transformedOptionList = ['$APF2','$APPB','$BT37','$IN3PB','$MDL3','$PBSB','$PRM31','$W38B'];
        let mappedResult = Agent.mapOptions(sourceOptionList, LEXICONS, Agent.TYPES.TRANSFORM_MANUFACTURING_TO_MARKETING);
        expect(JSON.stringify(utils.getOptionListFromMappedOptionsResult(mappedResult))).to.equal(JSON.stringify(transformedOptionList.sort()));

        sourceOptionList = ['AD15','AF00','APF0','APH3','AU3P','BC3B','BT37','CDM0','CH07','COUS','DRLH','DV2W','FG31','FM3B','GLFR','HL31','HM31','ID3W','IL31','LTPB','MDL3','MI00','MR31','PC30','RENA','RF3G','RS3H','S3PB','SA3P','SC00','STCP','SU3C','T3MA','TM00','TW00','UT3P','W38B','WR00','ZCST','PMSS','FC3P'];
        transformedOptionList = ['$BT37','$IN3PB','$MDL3','$PMSS','$PRM31','$W38B'];
        mappedResult = Agent.mapOptions(sourceOptionList, LEXICONS, Agent.TYPES.TRANSFORM_MANUFACTURING_TO_MARKETING);
        expect(JSON.stringify(utils.getOptionListFromMappedOptionsResult(mappedResult))).to.equal(JSON.stringify(transformedOptionList.sort()));
    });
});

