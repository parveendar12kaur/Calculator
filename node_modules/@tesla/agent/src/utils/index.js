const Rx = require('rxjs/Rx');
const Axios = require('axios');

const TYPES = require('./types');

module.exports = {
    httpGetObservable$,
    httpExceptionTransform,
    normalizeInput,
    normalizeOutput,
    deepClone
};

function httpGetObservable$(url, config = {}) {
    return Rx.Observable.fromPromise(Axios.get(url, config))
        .map(result => result.data)
        .catch(error => {
            console.log(`Something wrong when we try to request ${url} \n${error}`);
            return Rx.Observable.of(TYPES.EXCEPTION_HTTP_REQUEST);
        });
}

function httpExceptionTransform(response) {
    if (TYPES.EXCEPTION_HTTP_REQUEST === response.value) {
        return {
            success: false,
            message: 'Something wrong when we try to validate the configuration, please check the lexicon service.',
            code: TYPES.EXCEPTION_HTTP_REQUEST
        };
    }
    return response;
}

function normalizeInput(data) {
    return Array.isArray(data) ? data : [data];
}

function normalizeOutput(request, response) {
    return Array.isArray(request) ? response : response[0];
}

function deepClone(object) {
    return JSON.parse(JSON.stringify(object));
}
