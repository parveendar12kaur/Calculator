'use strict';

var difference = require('lodash/difference');
var intersection = require('lodash/intersection');
var Lexicon = require('../utils/lexicon');
var TYPES = require('../utils/types');
var Validator = require('../validator');

module.exports = {
    matching: matching,
    generateMatchingActions: generateMatchingActions
};

function matching(customerOptions, inventoryOptions, lexicon) {
    var normalizedLexicon = Lexicon.normalizeLexicon(lexicon);
    var matchingActions = generateMatchingActions(customerOptions, inventoryOptions, normalizedLexicon.matching);
    var updatedInventoryOptions = Validator.toggleOptions({
        options: inventoryOptions,
        lexicon: normalizedLexicon,
        actions: matchingActions
    });
    return updatedInventoryOptions;
}

function generateMatchingActions(customerOptions, inventoryOptions) {
    var matchingGroups = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    var customerOptionsDiff = difference(customerOptions, inventoryOptions);
    var inventoryOptionsDiff = difference(inventoryOptions, customerOptions);
    return matchingGroups.reduce(function (actions, _ref) {
        var options = _ref.options;

        var matchingOptionOfCustomerOptions = intersection(customerOptionsDiff, options);
        var matchingOptionOfInventoryOptions = intersection(inventoryOptionsDiff, options);
        if (matchingOptionOfCustomerOptions.length && matchingOptionOfInventoryOptions.length) {
            actions.push({
                action: TYPES.SET_RULE_ACTION,
                target: matchingOptionOfCustomerOptions[0]
            });
            actions.push({
                action: TYPES.UNSET_RULE_ACTION,
                target: matchingOptionOfInventoryOptions[0]
            });
        }
        return actions;
    }, []);
}