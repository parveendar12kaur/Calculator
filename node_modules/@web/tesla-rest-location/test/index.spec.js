var chai = require('chai'),
	expect = chai.expect;

var Location = require('../api/location');

describe('Test Suite for Location/Index', function() {
	it('should return country list when invoking getISOCountryList', function() {
		var countries = Location.getISOCountryList();
		expect(countries).to.be.a('object');
		expect(countries.US).to.be.a('string');
		expect(countries.US).to.equal('United States');
	});

	it('should return language list when invoking getLanguageList', function() {
		var usLanguageList = Location.getLanguageList('US');
		expect(usLanguageList).to.be.a('object');
		expect(usLanguageList).to.have.property('EN');
		expect(usLanguageList.EN).to.equal('English');

		var beLanguageList = Location.getLanguageList('BE');
		expect(beLanguageList).to.be.a('object');
		expect(beLanguageList).to.have.property('FR');
		expect(beLanguageList.FR).to.equal('French');
		expect(beLanguageList).to.have.property('NL');
		expect(beLanguageList.NL).to.equal('Dutch');
	});

	it('should return district list when invoking getDistrictList', function() {
		var cnDistrictList = Location.getDistrictList('CN', '北京', '北京');
		expect(cnDistrictList).to.be.a('array');
		expect(cnDistrictList.length).to.equal(16);
	});

	it('should return correct country attribute when invoking getCountryAttribute', function() {
		expect(Location.getCountryAttribute('CN', 'supportDistrictList')).to.equal(true);
		expect(Location.getCountryAttribute('US', 'zipcode')).to.be.a('string');
	});

	it('should check whether the country support zipcode when invoking isZipcodeEnabled', function() {
		expect(Location.isZipcodeEnabled('CN')).to.equal(true);
		expect(Location.isZipcodeEnabled('HK')).to.equal(false);
	});

	it('should validate zipcode according the regular expression when invoking validateZipcode', function() {
		expect(Location.validateZipcode('CN', '721300')).to.equal(true);
		expect(Location.validateZipcode('CN', '')).to.equal(true);
		expect(Location.validateZipcode('US', '721300')).to.equal(false);
		expect(Location.validateZipcode('US', '94306')).to.equal(true);
		expect(Location.validateZipcode('US', '94306-4205')).to.equal(true);
	});
});