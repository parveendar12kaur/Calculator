
var requestAnimationFrameShim = require("../shims/requestAnimationFrame");

/**
 * Utility to scroll window to a specific y
 *
 * TODO: move easing equations and requestAnim frame shims to separate modules 
 */

/**
 * Scrolls the browser window to a specific pixel
 * @param  {Number} scrollTargetY [description]
 * @param  {Number} speed         pixels-per-second
 * @param  {String} easing        ease equation to use
 */
function scrollTo(el, scrollTargetY, speed, easing) {

    el = el || window
    
    var isWindow = el === window;
    var scrollY = el.scrollTop || window.scrollY,
        scrollTargetY = scrollTargetY || 0,
        speed = speed || 2000,
        easing = easing || 'easeOutSine',
        currentTime = 0,
        // id of timeout or 
        requestAnimationId = null;

    // min time .1, max time .8 seconds
    var time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8));

    // TODO: Move easing equations into own module
    // easing equations from https://github.com/danro/easing-js/blob/master/easing.js
    var PI_D2 = Math.PI / 2;

    var easingEquations = {
        easeOutSine: function(pos) {
            return Math.sin(pos * (Math.PI / 2));
        },
        easeInOutSine: function(pos) {
            return (-0.5 * (Math.cos(Math.PI * pos) - 1));
        },
        easeInOutQuint: function(pos) {
            if ((pos /= 0.5) < 1) {
                return 0.5 * Math.pow(pos, 5);
            }
            return 0.5 * (Math.pow((pos - 2), 5) + 2);
        }
    };

    // animation loop
    function tick() {

        currentTime += 1 / 60;

        var p = currentTime / time;
        var t = easingEquations[easing](p);

        if (p < 1) {
            requestAnimationId = window.requestAnimationFrame(tick);
            if(isWindow) {
                window.scroll(0, scrollY + ((scrollTargetY - scrollY) * t));
                scrollY = window.scrollY;
            }
            else {
               el.scrollTop = scrollY + ((scrollTargetY - scrollY) * t);
               scrollY = el.scrollTop;
            }        
        }
        else {

            if(isWindow){
                window.scroll(0, scrollTargetY);
            }
            else {
                el.scrollTop = scrollTargetY;
            }

            window.cancelAnimationFrame(requestAnimationId);
        }
    }

    // call it once to get started
    tick();
}

module.exports = scrollTo;
