/**
 * FormUtils
 * 
 * @type {Object}
 */
module.exports = {

    /**
     * simple merge attributes method
     * trying to have no dependencies if possible :)
     */
    mergeAttr: function(target, attrs){

        for(var p in attrs){
            target[p] = attrs[p];
        }

        return target;
    },

	/**
     * Creates HTML element
     * @param type
     * @param attrs
     * @returns {Element}
     */
    createElement: function(type, attrs){

        var el = document.createElement(type);

        for(var p in attrs){
            el.setAttribute(p, attrs[p]);
        }

        return el;
    },

    /**
     * Creates a dynamic form and posts form data to URL specified in action
     *
     *  Usage: 
     *
     *   var formUtil = require("@web/tesla-utils/ui/formUtil");
     *   
     *   formUtil.formPOST("http://teslamotors.com/some-endpoint", {
     *       company: "Tesla",
     *       city: "Fremont",
     *       state: "CA"
     *   })
     * 
     * @param {String}action  URL to post data to
     * @param {Object} fields  Object containing simple key/value pairs to send via POST
     * @param {String} formAttributes [- any attributes you want injected into the <form> element e.g target: "_blank"
     */
    formPOST: function(action, fields, formAttributes){

        var form = this.createElement('form', this.mergeAttr({
            style : 'display:none',
            method: 'POST',
            action: action
        }, formAttributes || {}));

        if(fields instanceof Object){

            for(var p in fields){
                form.appendChild(this.createElement('input', {type: 'hidden', name: p, value: fields[p]}))
            }

            // we have to append form to body in order to get this to work
            document.body.appendChild(form);

            // submit form, force download
            form.submit();
        }
        else{
            throw 'fields param must be an object';
        }
    },

    /**
     * Download JSON Data as file
     * @see http://stackoverflow.com/questions/19721439/download-json-object-as-a-file-from-browser
     * @param fileName
     * @param data
     */
    downloadFile: function(fileName, data){

        try{

            var tempLink = this.createElement('a',{
                'href': 'data:text/plain;charset=utf-8,' + encodeURIComponent(data),
                'download': fileName,
                'style':'display:none'
            });

            document.body.appendChild(tempLink);
            tempLink.click();
            document.body.removeChild(tempLink);
        }
        catch(err){
            if(console && console.log){
                console.log('Error submitting form');
            }
        }
    }    

};