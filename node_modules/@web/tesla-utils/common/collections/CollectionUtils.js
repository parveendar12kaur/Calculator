module.exports = {

    /**
     * Find entry with the closest matching value for the passed 'field' value (field must be numeric)
     * @param  {Array} data  Array to search
     * @param  {Number} inputValue value to search against
     * @param  {String} property - property in object to obtain value from 
     * @param  {Boolean} returnIndex
     * @param {Function} fn -- additional fn to evaluate data against
     * @return {Object}      
     */
    getNearest: function(data, inputValue, property, returnIndex, fn){
         
        var smallestDiff = Number.MAX_VALUE;
        var nearestValue;
        var match;
        var matchIndex;

        for(var i = 0, n = data.length; i < n; i++){
            var value = data[i][property];
            var diff = Math.abs(value - inputValue);

            // if fn returns false, ignore in diff condition
            if(fn && !fn(value)){
                continue;
            }

            if(diff < smallestDiff){
                smallestDiff = diff;
                nearestValue = value;
                matchIndex = i;
                match = data[i];
            }
        }

        return returnIndex ? matchIndex : match;
    }
}