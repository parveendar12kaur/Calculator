/**
 * DataType module
 * Contains handy methods to coerce datatypes
 * @type {Object}
 */
module.exports = {

    /**
     * Coerce value to boolean
     * @param  {Any} val
     * @return {Boolean}
     */
    toBoolean: function(val){

    	if(typeof val === "boolean") {
    		return val;
    	}
        else if(typeof val === "string") {

            switch(val){
            	case "true":
            	case "1":
            	case "Y":
            	    return true;
            	case "false":
            	case "0":
            	case "N":
            	    return false;
            }
        }
        else if(typeof val === "number") {
        	return val === 0 ? false : true;
        }
        else {
        	// if val is 'truthy'
        	var isTruthy = (val) ? true : false;

        	// console.warn(" type coercion of ", val, " to ", isTruthy);
        	return isTruthy;
        }
    },

    /**
     * Coerce value to number with specified decimal points
     * @param  {Any} val
     * @return {Number}
     */
    toNumber: function(val, decimal_points) {

        decimal_points = decimal_points || 2;

        if (typeof val === 'number') {
            return val;
        }
        else if (typeof val === 'string') {
            var result = parseInt(parseFloat(val.replace(/[^\d\.\-eE+]/g, "")).toFixed(decimal_points));
            if (isNaN(result) || typeof result !== 'number') {
                return 0;
            }
            else {
                return result;
            }
        }
        else {
            return 0;
        }
    }
};