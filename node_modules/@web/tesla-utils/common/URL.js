/**
 * ES5 compatible
 * 
 * URL parsing util
 * @type {Object}
 */
module.exports = {

	/**
	 * Get name/value map from URL params
     *
     * USAGE:
     * 
     *   // passing url string
     *   var params = URL.params("http://tesla.com/modelx/design?model=mx&variant=mx");
     *   => {model: "mx", variant: "mx"}
     *   
     *   // defaults to window.location.href
     *   var params = URL.params();
     * 
	 * @param {String} url [optional] will return values from either hash or querystring, but not both
     * @param {String} paramDelimiter [optional] - character used to delimit name/value pairs (a=b&b=c) -- defaults to '&'
     * @param {String} valueDelimiter [optional] - character used to split name/value a=b -- defaults to '='
	 * @return {Object} 
	 */
    params: function(url, paramDelimiter, valueDelimiter){
        
        // if URL is not passed, then we will look to window.location;
        url = url || (window !== "undefined" ? window.location.href : null);

        if(!url || url === "about:blank"){
            console.log("URL.params -- no URL available");
            return null;
        }

        paramDelimiter = paramDelimiter || '&';
        valueDelimiter = valueDelimiter || '='

        var isHash = url.indexOf('#') > -1,
            isQueryString = url.indexOf('?') > -1,
    	    qPos = isQueryString ? url.indexOf('?') : url.indexOf('#'),
            params = {},
            vars;

    	if(qPos > -1){
    		url = url.substring(qPos + 1);
    	}
        else{
            // return null if no params found 
            return null;
        }

        vars = url.split(paramDelimiter);

        for(var i = 0; i < vars.length; i++){

        	if(vars[i].length){
        	    var pair = vars[i].split(valueDelimiter),
        	        key = pair[0],
        	        val = pair[1];

        	    params[key] = val;
        	}
        }

        return params;

    },

    /**
     * Stringify a params object and return query string
     * @param  {Object} params
     * @param  {String} paramDelimiter
     * @return {String}
     */
    stringify: function(params, paramDelimiter){

    	paramDelimiter = paramDelimiter || '&';

        var str = '';
        for(var p in params){
        	str += p + '=' + params[p] + paramDelimiter;
        }

        // remove trailing delimeter
        str = str.substring(0, str.length - 1);

        return str;
    }
};